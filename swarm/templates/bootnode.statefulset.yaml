{{- if .Values.bootnode.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "swarm.fullname" . }}-bootnode
  labels:
    app: {{ template "swarm.name" . }}
    chart: {{ template "swarm.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: bootnode
spec:
  serviceName: {{ template "swarm.fullname" . }}-bootnode
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "swarm.name" . }}
      release: {{ .Release.Name }}
      component: bootnode
  template:
    metadata:
      labels:
        app: {{ template "swarm.name" . }}
        release: {{ .Release.Name }}
        component: bootnode
        {{- if .Values.bootnode.podAnnotations }}
      annotations:
{{ toYaml .Values.bootnode.podAnnotations | indent 8 }}
        {{- end }}
    spec:
{{- with .Values.bootnode.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.bootnode.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.bootnode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
      - name: bootnode
        image: {{ .Values.bootnode.image.repository }}:{{ .Values.bootnode.image.tag }}
        imagePullPolicy: {{ .Values.bootnode.imagePullPolicy }}
        resources:
{{ toYaml .Values.bootnode.resources | indent 10 }}
        command:
        - sh
        - -ac
        - >
          swarm
          --debug
          --bootnode-mode
          --password /keys/bzzaccount.password
          --nodekey=/keys/bootnode.key
          --verbosity={{ .Values.bootnode.config.verbosity }}
          --maxpeers=5000
          --nat=ip:$POD_IP
          --port=30399
          --bzznetworkid={{ .Values.swarm.config.bzznetworkid }}
          --bootnodes=""
      {{- if .Values.swarm.tracingEnabled }}
          --tracing
          --tracing.endpoint=127.0.0.1:6831
          --tracing.svc=$(POD_NAME)
      {{- end }}
{{- range $i, $flag := .Values.bootnode.config.extraFlags }}
          {{ $flag }}
{{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: network
          containerPort: 30399
        volumeMounts:
        - name: keys
          mountPath: /keys
          readOnly: true
        - name: data
          mountPath: /root/.ethereum
      volumes:
      - name: keys
        secret:
          secretName: {{ template "swarm.fullname" . }}-bootnode
{{- if not .Values.bootnode.persistence.enabled }}
      - name: data
        emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "swarm.name" . }}
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        component: bootnode
    spec:
      accessModes:
        - {{ .Values.bootnode.persistence.accessMode | quote }}
      resources:
          requests:
            storage: {{ .Values.bootnode.persistence.size | quote }}
  {{- if .Values.bootnode.persistence.storageClass }}
    {{- if (eq "-" .Values.bootnode.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.bootnode.persistence.storageClass }}"
    {{- end }}
  {{- end }}
{{- end }}

{{- end }}
